pipeline {
  agent none
  options {
    buildDiscarder(logRotator(numToKeepStr: '2'))
    skipDefaultCheckout true
    timeout(time: 10, unit: 'MINUTES')
  }
  stages {
    stage("GitHub: Create/Update") {
      agent { label 'default-jnlp' }
      when { 
        beforeAgent true
        anyOf {
          triggeredBy 'UserIdCause'
          triggeredBy 'BranchIndexingCause'
        }
      }
      steps {
        checkout scm
        withCredentials([usernamePassword(credentialsId: 'admin-cli-token', usernameVariable: 'JENKINS_CLI_USR', passwordVariable: 'JENKINS_CLI_PSW')]) {
          sh """
            git checkout -B policy-patch
            curl -O http://REPLACE_FOLDER_NAME-REPLACE_CONTROLLER_NAME/REPLACE_FOLDER_NAME-REPLACE_CONTROLLER_NAME/jnlpJars/jenkins-cli.jar
            alias cli='java -jar jenkins-cli.jar -s http://REPLACE_FOLDER_NAME-REPLACE_CONTROLLER_NAME/REPLACE_FOLDER_NAME-REPLACE_CONTROLLER_NAME/ -auth $JENKINS_CLI_USR:$JENKINS_CLI_PSW'
            cli policies > pipeline-policies.json
            rm jenkins-cli.jar
          """
        }
        withCredentials([usernamePassword(credentialsId: "${githubCredentialId}",
                                          usernameVariable: 'GITHUB_APP',
                                          passwordVariable: 'GITHUB_ACCESS_TOKEN')]) {
          sh """
            curl -H 'Accept: application/vnd.github.antiope-preview+json' \
                 -H 'authorization: Bearer ${GITHUB_ACCESS_TOKEN}' \
                 -X DELETE \
                 https://api.github.com/repos/${repoOwner}/${repository}/git/refs/heads/policy-patch

            git config user.email "beedemo.dev@gmail.com"
            git config user.name "cloudbees-ci workshop bot"
            git remote set-url origin https://x-access-token:${GITHUB_ACCESS_TOKEN}@github.com/${repoOwner}/${repository}.git                                  
            git add . && git commit -am "create/update pipeline policies"   
            git push -u origin policy-patch
          """
        }
      }
    }
    stage("Controller: Create/Update") {
      agent { label 'default-jnlp' }
      when {
        beforeAgent true
        branch 'main'
        not { triggeredBy 'BranchIndexingCause' }
      }
      steps {
        checkout scm
        withCredentials([usernamePassword(credentialsId: 'admin-cli-token', usernameVariable: 'JENKINS_CLI_USR', passwordVariable: 'JENKINS_CLI_PSW')]) {
          sh """
            curl -O http://REPLACE_FOLDER_NAME-REPLACE_CONTROLLER_NAME/REPLACE_FOLDER_NAME-REPLACE_CONTROLLER_NAME/jnlpJars/jenkins-cli.jar
            alias cli='java -jar jenkins-cli.jar -s http://REPLACE_FOLDER_NAME-REPLACE_CONTROLLER_NAME/REPLACE_FOLDER_NAME-REPLACE_CONTROLLER_NAME/ -auth $JENKINS_CLI_USR:$JENKINS_CLI_PSW'
            cli policies --put < pipeline-policies.json
          """
        }
      }
    }
  }
}
